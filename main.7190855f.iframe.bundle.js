(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{"./.storybook/preview.js-generated-config-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,"parameters",(function(){return parameters}));__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var ClientApi=__webpack_require__("./node_modules/@storybook/builder-webpack4/node_modules/@storybook/client-api/dist/esm/ClientApi.js"),esm=__webpack_require__("./node_modules/@storybook/builder-webpack4/node_modules/@storybook/client-logger/dist/esm/index.js"),parameters={actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/}}};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":case"argTypes":return esm.a.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify(value));case"decorators":return value.forEach((function(decorator){return Object(ClientApi.d)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return Object(ClientApi.e)(loader,!1)}));case"parameters":return Object(ClientApi.f)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return Object(ClientApi.b)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return Object(ClientApi.c)(enhancer)}));case"render":return Object(ClientApi.g)(value);case"globals":case"globalTypes":var v={};return v[key]=value,Object(ClientApi.f)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./generated-stories-entry.js":function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js").configure)([__webpack_require__("./src sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?!(?:^|[\\\\/])\\.).)*?)[\\\\/])(?!\\.)(?=.)[^\\\\/]*?\\.stories\\.mdx)$"),__webpack_require__("./src sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?!(?:^|[\\\\/])\\.).)*?)[\\\\/])(?!\\.)(?=.)[^\\\\/]*?\\.stories\\.(js|jsx|ts|tsx))$")],module,!1)}).call(this,__webpack_require__("./node_modules/webpack/buildin/module.js")(module))},"./src sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?!(?:^|[\\\\/])\\.).)*?)[\\\\/])(?!\\.)(?=.)[^\\\\/]*?\\.stories\\.(js|jsx|ts|tsx))$":function(module,exports,__webpack_require__){var map={"./stories/PinInput.stories.tsx":"./src/stories/PinInput.stories.tsx","./stories/StatefulPinInput.stories.tsx":"./src/stories/StatefulPinInput.stories.tsx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?!(?:^|[\\\\/])\\.).)*?)[\\\\/])(?!\\.)(?=.)[^\\\\/]*?\\.stories\\.(js|jsx|ts|tsx))$"},"./src sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?!(?:^|[\\\\/])\\.).)*?)[\\\\/])(?!\\.)(?=.)[^\\\\/]*?\\.stories\\.mdx)$":function(module,exports,__webpack_require__){var map={"./stories/GettingStarted.stories.mdx":"./src/stories/GettingStarted.stories.mdx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?!(?:^|[\\\\/])\\.).)*?)[\\\\/])(?!\\.)(?=.)[^\\\\/]*?\\.stories\\.mdx)$"},"./src/components/PinInput.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__("./node_modules/core-js/modules/es.regexp.constructor.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.exec.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.array.every.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),PinInputContainer=styled_components_browser_esm.a.div.withConfig({displayName:"PinInput__PinInputContainer",componentId:"sc-1rhejlk-0"})(["display:flex;align-items:center;"]),toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/toConsumableArray.js"),toConsumableArray_default=__webpack_require__.n(toConsumableArray),pinInputDefaultProps=(__webpack_require__("./node_modules/core-js/modules/es.string.split.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.string.replace.js"),{type:"number",mask:!1,showState:!0,size:"md",autoFocus:!1,autoTab:!0,borderColor:"rgb(204,204,204)",errorBorderColor:"rgb(220,53,69)",focusBorderColor:"rgb(13,110,253)",validBorderColor:"rgb(25,135,84)",containerStyle:{},inputStyle:{},autoComplete:"off",placeholder:"o","aria-label":"Please enter pin code"}),validateToPattern=(__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.array.join.js"),__webpack_require__("./node_modules/core-js/modules/es.string.match.js"),__webpack_require__("./node_modules/core-js/modules/es.number.constructor.js"),__webpack_require__("./node_modules/core-js/modules/es.parse-int.js"),function validateToPattern(validate){if(Array.isArray(validate)){var regex=new RegExp(validate.join("|")).toString();return regex.slice(1,regex.length-1)}if("string"==typeof validate){var _regex=new RegExp(validate.split("").join("|")).toString();return _regex.slice(1,_regex.length-1)}if(validate instanceof RegExp){var _regex2=validate.toString();return _regex2.slice(1,_regex2.length-1)}}),colorParser=function colorParser(color){if(void 0===color)return null;var match=color.match(/^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/);if(match)return{r:Number(match[1]),g:Number(match[2]),b:Number(match[3])};var shorthand=/^#?[a-fA-Z\d]{3}$/i.test(color),result=shorthand?/^#?([a-f\d])([a-f\d])([a-f\d])$/i.exec(color):/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(color);return result?{r:parseInt(shorthand?result[1]+result[1]:result[1],16),g:parseInt(shorthand?result[2]+result[2]:result[2],16),b:parseInt(shorthand?result[3]+result[3]:result[3],16)}:null},Input=styled_components_browser_esm.a.input.withConfig({displayName:"PinInputField__Input",componentId:"sc-1ogv5ta-0"})(["width:",";height:",";margin-right:0.375rem;outline:transparent solid 2px;outline-offset:2px;font-size:",";text-align:center;border-radius:0.375rem;border-width:1px;border-style:solid;border-color:",";background-color:inherit;box-sizing:border-box;&:focus{border-color:",";box-shadow:"," 0px 0px 0px 1px;}&:last-child{margin-right:0;}"," "," &:disabled{opacity:0.5;cursor:not-allowed;}"],(function(_ref){switch(_ref.$sizing){case"xs":return"1.5rem";case"sm":return"2rem";case"md":return"2.5rem";case"lg":return"3rem"}}),(function(_ref2){switch(_ref2.$sizing){case"xs":return"1.5rem";case"sm":return"2rem";case"md":return"2.5rem";case"lg":return"3rem"}}),(function(_ref3){switch(_ref3.$sizing){case"xs":return"0.75rem";case"sm":return"0.875rem";case"md":return"1rem";case"lg":return"1.125rem"}}),(function(_ref4){var $borderColor=_ref4.$borderColor,rgb=colorParser($borderColor);return rgb?"rgb("+rgb.r+","+rgb.g+","+rgb.b+")":pinInputDefaultProps.borderColor}),(function(_ref5){var $focusBorderColor=_ref5.$focusBorderColor,rgb=colorParser($focusBorderColor);return rgb?"rgb("+rgb.r+","+rgb.g+","+rgb.b+")":pinInputDefaultProps.focusBorderColor}),(function(_ref6){return _ref6.$focusBorderColor}),(function(_ref7){var $completed=_ref7.$completed,$showState=_ref7.$showState,$validBorderColor=_ref7.$validBorderColor,rgb=colorParser($validBorderColor);return $completed&&$showState?"&:valid {\n    border-color: "+(rgb?"rgb("+rgb.r+","+rgb.g+","+rgb.b+")":pinInputDefaultProps.validBorderColor)+";\n    box-shadow: "+(rgb?"rgb("+rgb.r+","+rgb.g+","+rgb.b+")":pinInputDefaultProps.validBorderColor)+" 0px 0px 0px 1px;\n    background-color: "+(rgb?"rgba("+rgb.r+","+rgb.g+","+rgb.b+",0.1)":pinInputDefaultProps.validBorderColor.replace("rgb","rgba").replace(")",",0.1)"))+";\n  }":""}),(function(_ref8){var $showState=_ref8.$showState,$errorBorderColor=_ref8.$errorBorderColor,rgb=colorParser($errorBorderColor);return $showState?"&:invalid {\n    border-color: "+(rgb?"rgb("+rgb.r+","+rgb.g+","+rgb.b+")":pinInputDefaultProps.errorBorderColor)+";\n    box-shadow: "+(rgb?"rgb("+rgb.r+","+rgb.g+","+rgb.b+")":pinInputDefaultProps.errorBorderColor)+" 0px 0px 0px 1px;\n    background-color: "+(rgb?"rgba("+rgb.r+","+rgb.g+","+rgb.b+",0.1)":pinInputDefaultProps.errorBorderColor.replace("rgb","rgba").replace(")",",0.1)"))+";\n  }":""})),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),propTypes={index:prop_types_default.a.number,values:prop_types_default.a.arrayOf(prop_types_default.a.string),onChange:prop_types_default.a.func},PinInputField_PinInputField=function PinInputField(_ref){var index=_ref.index,value=_ref.value,values=_ref.values,completed=_ref.completed,type=_ref.type,mask=_ref.mask,size=_ref.size,validate=_ref.validate,format=_ref.format,showState=_ref.showState,autoFocus=_ref.autoFocus,autoTab=_ref.autoTab,ariaDescribedby=_ref["aria-describedby"],ariaLabel=_ref["aria-label"],ariaLabelledby=_ref["aria-labelledby"],autoComplete=_ref.autoComplete,disabled=_ref.disabled,inputMode=_ref.inputMode,id=_ref.id,name=_ref.name,placeholder=_ref.placeholder,required=_ref.required,inputClassName=_ref.inputClassName,inputStyle=_ref.inputStyle,borderColor=_ref.borderColor,errorBorderColor=_ref.errorBorderColor,focusBorderColor=_ref.focusBorderColor,validBorderColor=_ref.validBorderColor,onChange=_ref.onChange,onBlur=_ref.onBlur,onFocus=_ref.onFocus,onKeyDown=_ref.onKeyDown,inputRef=Object(react.useRef)(),pattern=Object(react.useMemo)((function(){return validateToPattern(validate)}),[validate]);return Object(react.useEffect)((function(){autoFocus&&0===index&&inputRef.current.focus()}),[autoFocus,index]),Object(jsx_runtime.jsx)(Input,{ref:inputRef,type:mask?"password":"text","aria-describedby":ariaDescribedby,"aria-disabled":disabled,"aria-label":ariaLabel,"aria-labelledby":ariaLabelledby,"aria-required":required,autoComplete:autoComplete,disabled:disabled,name:name,id:id&&id+"-"+index,className:inputClassName,inputMode:inputMode||("number"===type?"numeric":"text"),required:required,placeholder:placeholder,pattern:pattern,value:value,onChange:function handleInputChange(e){var currentValue=values[index],eventValue=e.target.value,newValues=toConsumableArray_default()(values),rawValue=function normalizeNewValue(currentValue,eventValue){return currentValue?eventValue.length>2?eventValue.split(""):""===eventValue?[]:currentValue[0]===eventValue[0]?[eventValue[1]]:[eventValue[0]]:eventValue.split("")}(currentValue,eventValue).slice(0,newValues.length-index),regex="number"===type?/(^$)|(\d+)/:/.*/,shouldFireChange=rawValue.every((function(val){return regex.test(val)}));if(onChange){var newValue=format?rawValue.map((function(val){return format(val)})):rawValue;if(newValue.length?newValue.forEach((function(val,idx){return newValues[index+idx]=val})):newValues[index]="",shouldFireChange){onChange(newValue,index,newValues);for(var inputEl=inputRef.current,i=0;i<newValue.length;i++)inputEl=inputEl.nextElementSibling;newValue&&autoTab&&inputEl instanceof HTMLInputElement&&inputEl.focus()}}},onKeyDown:function handleKeyDown(e){if("Backspace"===e.key&&autoTab&&""===values[index]&&index>0){var prevInput=inputRef.current.previousElementSibling;prevInput instanceof HTMLInputElement&&prevInput.focus()}onKeyDown&&onKeyDown(e)},onFocus:function handleInputFocus(e){e.target.placeholder="",onFocus&&onFocus(e)},onBlur:function handleInputBlur(e){e.target.placeholder=placeholder,onBlur&&onBlur(e)},$completed:completed,$showState:showState,$sizing:size,style:inputStyle,$borderColor:borderColor,$errorBorderColor:errorBorderColor,$focusBorderColor:focusBorderColor,$validBorderColor:validBorderColor,"data-index":index})};PinInputField_PinInputField.displayName="PinInputField",PinInputField_PinInputField.displayName="PinInputField",PinInputField_PinInputField.propTypes=propTypes;var components_PinInputField=PinInputField_PinInputField;try{PinInputField_PinInputField.displayName="PinInputField",PinInputField_PinInputField.__docgenInfo={description:"",displayName:"PinInputField",props:{index:{defaultValue:null,description:"",name:"index",required:!0,type:{name:"number"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"string"}},completed:{defaultValue:null,description:"",name:"completed",required:!0,type:{name:"boolean"}},values:{defaultValue:null,description:"",name:"values",required:!0,type:{name:"string[]"}},type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:"enum",value:[{value:'"number"'},{value:'"text"'}]}},mask:{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"xs"'},{value:'"sm"'},{value:'"md"'},{value:'"lg"'}]}},validate:{defaultValue:null,description:"",name:"validate",required:!1,type:{name:"string | RegExp | string[]"}},format:{defaultValue:null,description:"",name:"format",required:!1,type:{name:"(char: string) => string"}},showState:{defaultValue:null,description:"",name:"showState",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:null,description:"",name:"autoFocus",required:!1,type:{name:"boolean"}},autoTab:{defaultValue:null,description:"",name:"autoTab",required:!1,type:{name:"boolean"}},containerClassName:{defaultValue:null,description:"",name:"containerClassName",required:!1,type:{name:"string"}},containerStyle:{defaultValue:null,description:"",name:"containerStyle",required:!1,type:{name:"CSSProperties"}},inputClassName:{defaultValue:null,description:"",name:"inputClassName",required:!1,type:{name:"string"}},inputStyle:{defaultValue:null,description:"",name:"inputStyle",required:!1,type:{name:"CSSProperties"}},borderColor:{defaultValue:null,description:"",name:"borderColor",required:!1,type:{name:"string"}},errorBorderColor:{defaultValue:null,description:"",name:"errorBorderColor",required:!1,type:{name:"string"}},focusBorderColor:{defaultValue:null,description:"",name:"focusBorderColor",required:!1,type:{name:"string"}},validBorderColor:{defaultValue:null,description:"",name:"validBorderColor",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"(value: string | string[], index: number, values: string[]) => void"}},onComplete:{defaultValue:null,description:"",name:"onComplete",required:!1,type:{name:"(values: string[]) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/PinInputField.tsx#PinInputField"]={docgenInfo:PinInputField_PinInputField.__docgenInfo,name:"PinInputField",path:"src/components/PinInputField.tsx#PinInputField"})}catch(__react_docgen_typescript_loader_error){}var PinInput_propTypes={values:prop_types_default.a.arrayOf(prop_types_default.a.string).isRequired,type:prop_types_default.a.oneOf(["number","text"]),mask:prop_types_default.a.bool,validate:prop_types_default.a.oneOfType([prop_types_default.a.string,prop_types_default.a.arrayOf(prop_types_default.a.string),prop_types_default.a.instanceOf(RegExp)]),format:prop_types_default.a.func,showState:prop_types_default.a.bool,size:prop_types_default.a.oneOf(["xs","sm","md","lg"]),autoFocus:prop_types_default.a.bool,autoTab:prop_types_default.a.bool,containerClassName:prop_types_default.a.string,containerStyle:prop_types_default.a.object,inputClassName:prop_types_default.a.string,inputStyle:prop_types_default.a.object,onChange:prop_types_default.a.func},PinInput_PinInput=function PinInput(props){var completed=Object(react.useMemo)((function(){return props.values.every((function(val){return val}))}),[props.values]);return completed&&props.onComplete&&(props.validate?props.values.every((function(val){return new RegExp(validateToPattern(props.validate)).test(val)}))&&props.onComplete(props.values):props.onComplete(props.values)),Object(jsx_runtime.jsx)(PinInputContainer,{className:props.containerClassName,style:props.containerStyle,children:props.values.map((function(value,i){return Object(jsx_runtime.jsx)(components_PinInputField,Object.assign({index:i,value:value,completed:completed},props),props.id?props.id+"-"+i:i)}))})};PinInput_PinInput.displayName="PinInput",PinInput_PinInput.displayName="PinInput",PinInput_PinInput.propTypes=PinInput_propTypes,PinInput_PinInput.defaultProps=pinInputDefaultProps;__webpack_exports__.a=PinInput_PinInput;try{PinInput_PinInput.displayName="PinInput",PinInput_PinInput.__docgenInfo={description:"",displayName:"PinInput",props:{values:{defaultValue:null,description:"",name:"values",required:!0,type:{name:"string[]"}},type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:"enum",value:[{value:'"number"'},{value:'"text"'}]}},mask:{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"xs"'},{value:'"sm"'},{value:'"md"'},{value:'"lg"'}]}},validate:{defaultValue:null,description:"",name:"validate",required:!1,type:{name:"string | RegExp | string[]"}},format:{defaultValue:null,description:"",name:"format",required:!1,type:{name:"(char: string) => string"}},showState:{defaultValue:null,description:"",name:"showState",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:null,description:"",name:"autoFocus",required:!1,type:{name:"boolean"}},autoTab:{defaultValue:null,description:"",name:"autoTab",required:!1,type:{name:"boolean"}},containerClassName:{defaultValue:null,description:"",name:"containerClassName",required:!1,type:{name:"string"}},containerStyle:{defaultValue:null,description:"",name:"containerStyle",required:!1,type:{name:"CSSProperties"}},inputClassName:{defaultValue:null,description:"",name:"inputClassName",required:!1,type:{name:"string"}},inputStyle:{defaultValue:null,description:"",name:"inputStyle",required:!1,type:{name:"CSSProperties"}},borderColor:{defaultValue:null,description:"",name:"borderColor",required:!1,type:{name:"string"}},errorBorderColor:{defaultValue:null,description:"",name:"errorBorderColor",required:!1,type:{name:"string"}},focusBorderColor:{defaultValue:null,description:"",name:"focusBorderColor",required:!1,type:{name:"string"}},validBorderColor:{defaultValue:null,description:"",name:"validBorderColor",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"(value: string | string[], index: number, values: string[]) => void"}},onComplete:{defaultValue:null,description:"",name:"onComplete",required:!1,type:{name:"(values: string[]) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/PinInput.tsx#PinInput"]={docgenInfo:PinInput_PinInput.__docgenInfo,name:"PinInput",path:"src/components/PinInput.tsx#PinInput"})}catch(__react_docgen_typescript_loader_error){}},"./src/stories/GettingStarted.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)(dist_esm.c,{title:"Getting Started",mdxType:"Meta"}),Object(esm.b)(dist_esm.b,{mdxType:"Description"},'# React Input Pin Code\n\n[![Validate](https://github.com/luffy84217/react-input-pin-code/actions/workflows/validate.yml/badge.svg)](https://github.com/luffy84217/react-input-pin-code/actions/workflows/validate.yml)\n[![CircleCI](https://circleci.com/gh/luffy84217/react-input-pin-code/tree/main.svg?style=shield)](https://circleci.com/gh/luffy84217/react-input-pin-code/tree/main)\n[![Build Status](https://app.travis-ci.com/luffy84217/react-input-pin-code.svg?branch=main)](https://app.travis-ci.com/luffy84217/react-input-pin-code)\n[![codecov](https://codecov.io/gh/luffy84217/react-input-pin-code/branch/main/graph/badge.svg?token=QSHM2A3C5V)](https://codecov.io/gh/luffy84217/react-input-pin-code)\n![npm](https://img.shields.io/npm/v/react-input-pin-code)\n![NPM](https://img.shields.io/npm/l/react-input-pin-code)\n[![storybook](https://raw.githubusercontent.com/storybooks/brand/master/badge/badge-storybook.svg)](https://luffy84217.github.io/react-input-pin-code/)\n\n> An accessible and simple pin input component built with styled-components for ReactJS.\n\n## Demo\n\n![image](https://user-images.githubusercontent.com/28497046/147468428-b1bb0e98-70a3-4874-b9e8-b9701fdb2781.png)\n\n[Here](https://luffy84217.github.io/react-input-pin-code/) to see documentation and examples.\n\nSource code at https://github.com/luffy84217/react-input-pin-code.\n\n## Installation\n\nTo get started, install and save in your `package.json` dependencies, run:\n\n```bash\nnpm install react-input-pin-code styled-components\n```\n\nor\n\n```bash\nyarn add react-input-pin-code styled-components\n```\n\nPlease note that [styled-components](https://styled-components.com/) is peer dependency.\n\n## Importing\n\nYou can use the following two ways to import module.\n\n```javascript\nimport { PinInput } from \'react-input-pin-code\'; // ES Module\nor;\nvar PinInput = require(\'react-input-pin-code\').PinInput; // CommonJS Module\n```\n\n## Usage\n\n### Basic Example\n\n```jsx\nimport React from \'react\';\nimport { PinInput } from \'react-input-pin-code\';\n\nexport default () => {\n  const [values, setValues] = React.useState([\'\', \'\', \'\']);\n\n  return (\n    <PinInput\n      values={values}\n      onChange={(value, index, values) => setValues(values)}\n    />\n  );\n};\n```\n\nFilling one character at a time for each input. When a character is entered, the focus transfers to the next input automatically in the sequence until all inputs are filled in. Here is the explanation of behavior below:\n\n- You can fill in only one character per input.\n- To overwrite the value of an input, you donʼt need to select the text in the input. If you type a digit while the input is focused, the input will update.\n- Pressing `Backspace` when it is empty in the input will move focus to the previous input (if any) and clear the value of.\n\n## Pin input length\n\n`PinInput` expects an array of strings for the `values` prop. The number of input fields rendered is equal to the length of the array.\n\n## Passing id, className and name\n\nYou can pass `id` or `name` or `containerClassName` or `inputClassName` prop.ClassName and name will be shared amongst the inputs, which means they will each have their name set to this value, it is comfortable for the use of pseudo element in `global.css` file. id will append an index to any string you provide and pass to the corresponding input. For example, if you pass foo as id and bar as name and there are four inputs, the resulting ids are **foo-0**, **foo-1**, **foo-2**, and **foo-3** and each input has the name bar.\n\n## Size of input\n\nYou can control the size of the inputs with the `size` prop. It comes in four sizes.\n\n| Variety |          Size |       Font Size |\n| :-----: | ------------: | --------------: |\n|   xs    | 1.5rem (24px) |  0.75rem (12px) |\n|   sm    |   2rem (32px) | 0.875rem (14px) |\n|   md    | 2.5rem (40px) |     1rem (16px) |\n|   lg    |   3rem (48px) | 1.125rem (18px) |\n\n## Allowing alphanumeric input values\n\nBy default, the `PinInput` is passed **number** as `type` prop so it accepts only numeric values to show up. To add support for alphanumeric values, pass the `type` prop and set its value to either **text** or **number**.\n\n## Validate & Format\n\n`PinInput` provides `validate` prop to specify native attribute `pattern`, which is a regular expression which the input\'s value must match in order for the value to pass [constraint validation](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Constraint_validation).\n\n`Format` prop specify a pure function to transform raw input. For example, to set the values to upper case:\n\n`(char: string) => char.toUpperCase()`\n\n## Valid & Invalid state\n\nYou can pass `validate` prop to validate input values, if value of the input doesn\'t match test, it will show error border instantly enter, while it will only show valid border after all inputs are filled in and pass validation.\n\nYou can disable this behavior by setting `showState` prop to **false**.\n\n## Adding mask\n\nYou can set `mask` prop to **true** to prevent from showing input values. It is equivalent to setting input native attribute `type` to **password**.\n\n## Disable focus management\n\nBy default, `PinInput` moves focus automatically to the next input once a field is filled. It also transfers focus to a previous input when `Backspace` is pressed with focus on an empty input.\n\nTo disable this behavior, set `autoTab` prop to **false**\n\n## AutoFocus\n\n`PinInput` offers a way let it focus from the start. Simply set `autoFocus` prop to **true** to focus the first input upon initial mounting of the component.\n\n## Once all inputs are filled in\n\n`PinInput` provides `onComplete` event handler to access input values, unlike `onChange`, `onComplete` only triggers when all inputs are filled in.\n\n> **NOTICE** if you offer a list of allowed characters to `validate` prop, `onComplete` will trigger ony when all input values pass validation.\n\n## Changing the placeholder\n\nBy default, `PinInput` placeholder is (○), you can change that if you want.\n\n## AutoFill and Copy + Paste\n\nTry copying & pasting 1234 into any of the inputs.\n\nBy default, you can only change one input at a time, but if one of the input field receives a longer string by pasting into it, `PinInput` attempts to validate the string and fill the other inputs.\n\n## Stateful (uncontrolled) Pin Input\n\nThere is also an [uncontrolled](https://reactjs.org/docs/uncontrolled-components.html) version, `StatefulPinInput`, which manages its own state. The default input length for this component is four, but you can change that by passing **number** to `length` prop. Aslo you can pass `initialValue` as an initial value for `StatefulPinInput`.\n\n```jsx\nimport React from \'react\';\nimport { StatefulPinInput } from \'react-input-pin-code\';\n\nexport default () => {\n  return <StatefulPinInput length={4} initialValue="1234" />;\n};\n```\n\n## API\n\n**`PinInput` Props**\n\n| Name(\\*required)   | Type                                                                     | Default                 | Description                                                                                                                                                                                                                   |\n| :----------------- | :----------------------------------------------------------------------- | :---------------------- | :---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| aria-describedby   | string                                                                   |                         | Sets aria-describedby attribute.                                                                                                                                                                                              |\n| aria-label         | string                                                                   | "Please enter pin code" | Sets aria-label attribute.                                                                                                                                                                                                    |\n| aria-labelledby    | string                                                                   |                         | Sets aria-labelledby attribute.                                                                                                                                                                                               |\n| autoComplete       | string                                                                   | "off"                   | Determines if browser should provide value suggestions.                                                                                                                                                                       |\n| autoFocus          | boolean                                                                  | false                   | If true the input will be focused on the first mount.                                                                                                                                                                         |\n| autoTab            | boolean                                                                  | true                    | If true focus will move automatically to the next/previous input once filled or deleted                                                                                                                                       |\n| borderColor        | string                                                                   | rgb(204,204,204)        | Let you customize border color when the input is not focused.                                                                                                                                                                 |\n| errorBorderColor   | string                                                                   | rgb(220,53,69)          | Let you customize border color when the input is invalid.                                                                                                                                                                     |\n| focusBorderColor   | string                                                                   | rgb(13,110,253)         | Let you customize border color when the input is focused.                                                                                                                                                                     |\n| validBorderColor   | string                                                                   | rgb(25,135,84)          | Let you customize border color when the input is valid.                                                                                                                                                                       |\n| disabled           | boolean                                                                  |                         | Renders component in disabled state.                                                                                                                                                                                          |\n| format             | (char: string) => string                                                 |                         | Pure function to transform raw input.                                                                                                                                                                                         |\n| id                 | string                                                                   |                         | Id attribute value to be added to the input element and as a label\'s for attribute value.                                                                                                                                     |\n| inputMode          | string                                                                   |                         | This attribute allows a browser to display an appropriate virtual keyboard. (**NOTE** `type` prop will determine appropriate `inputMode` automatically. if you pass `inputMode` prop, it will override built-in `inputMode`.) |\n| mask               | boolean                                                                  | false                   | Prevent from showing the pin code                                                                                                                                                                                             |\n| name               | string                                                                   |                         | Name attribute.                                                                                                                                                                                                               |\n| onBlur             | (event: React.FocusEvent) => void                                        |                         | Called the onBlur event triggers.                                                                                                                                                                                             |\n| onChange           | (value: string &#124; string[], index: number, values: string[]) => void |                         | Called when input value is changed.                                                                                                                                                                                           |\n| onComplete         | (values: string[]) => void                                               |                         | Called when all inputs are filled in and validated                                                                                                                                                                            |\n| onFocus            | (event: React.FocusEvent) => void                                        |                         | Called the onFocus event triggers.                                                                                                                                                                                            |\n| onKeyDown          | (event: React.KeyboardEvent) => void                                     |                         | Called the onKeyDown event triggers.                                                                                                                                                                                          |\n| placeholder        | string                                                                   | "o"                     | Displayed when the pin code is not entered yet.                                                                                                                                                                               |\n| required           | boolean                                                                  |                         | Renders component in required state.                                                                                                                                                                                          |\n| showState          | boolean                                                                  | true                    | Determine whether valid/invalid border shows up or not.                                                                                                                                                                       |\n| size               | "xs" &#124; "sm" &#124; "md" &#124; "lg"                                 | "md"                    | Renders component in provided size.                                                                                                                                                                                           |\n| containerClassName | string                                                                   |                         | Lets you append custom class to container element.                                                                                                                                                                            |\n| containerStyle     | object                                                                   | {}                      | Lets you customize container element.                                                                                                                                                                                         |\n| inputClassName     | string                                                                   |                         | Lets you append custom class to input element.                                                                                                                                                                                |\n| inputStyle         | object                                                                   | {}                      | Lets you customize input element.                                                                                                                                                                                             |\n| type               | "number" &#124; "text"                                                   | "number"                | The type of values the pin-input should allow                                                                                                                                                                                 |\n| validate           | string &#124; string[] &#124; RegExp                                     |                         | A regular expression which the input\'s value must match in order for the value to pass [constraint validation](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Constraint_validation).                                |\n| values(\\*)         | string[]                                                                 |                         | PinInput value attribute.                                                                                                                                                                                                     |\n\n**`StatefulPinInput` Props**\n\n| Name         | Type                   | Default | Description                         |\n| :----------- | :--------------------- | :------ | :---------------------------------- |\n| length       | number                 | 4       | The number of input fields.         |\n| initialValue | string &#124; string[] | ""      | The initial value of the pin input. |\n\n## License\n\nMIT\n'))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Getting Started",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta},"./src/stories/PinInput.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Basic",(function(){return Basic})),__webpack_require__.d(__webpack_exports__,"PinLength",(function(){return PinLength})),__webpack_require__.d(__webpack_exports__,"Size",(function(){return Size})),__webpack_require__.d(__webpack_exports__,"TextInput",(function(){return TextInput})),__webpack_require__.d(__webpack_exports__,"Masking",(function(){return Masking})),__webpack_require__.d(__webpack_exports__,"IDAndName",(function(){return IDAndName})),__webpack_require__.d(__webpack_exports__,"ClassName",(function(){return ClassName})),__webpack_require__.d(__webpack_exports__,"Validation",(function(){return Validation})),__webpack_require__.d(__webpack_exports__,"Formatter",(function(){return Formatter})),__webpack_require__.d(__webpack_exports__,"Disabled",(function(){return Disabled})),__webpack_require__.d(__webpack_exports__,"BorderColor",(function(){return BorderColor})),__webpack_require__.d(__webpack_exports__,"CustomStyle",(function(){return CustomStyle})),__webpack_require__.d(__webpack_exports__,"CustomPlaceholder",(function(){return CustomPlaceholder})),__webpack_require__.d(__webpack_exports__,"AutoFocu",(function(){return AutoFocu})),__webpack_require__.d(__webpack_exports__,"DisableAutoTab",(function(){return DisableAutoTab}));var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@babel/runtime/helpers/slicedToArray.js"),_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__),react__WEBPACK_IMPORTED_MODULE_6__=(__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/react/index.js")),_components_PinInput__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/components/PinInput.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={title:"Components/PinInput",component:_components_PinInput__WEBPACK_IMPORTED_MODULE_7__.a,argTypes:{}};var Template=function Template(args){var _useState=Object(react__WEBPACK_IMPORTED_MODULE_6__.useState)(args.values),_useState2=_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(_useState,2),values=_useState2[0],setValues=_useState2[1];return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_components_PinInput__WEBPACK_IMPORTED_MODULE_7__.a,Object.assign({},args,{values:values,onChange:function onChange(_value,_index,values){return setValues(values)}}))};Template.displayName="Template";var Basic=Template.bind({});Basic.args={values:["","","",""],type:"number",mask:!1,size:"md",showState:!0,autoFocus:!1,autoTab:!0,placeholder:"o"};var PinLength=Template.bind({});PinLength.args={values:["","","","","","",""]};var Size=Template.bind({});Size.args={values:["","","","","","",""],size:"lg"};var TextInput=Template.bind({});TextInput.args={values:["","","",""],type:"text"};var Masking=Template.bind({});Masking.args={values:["","","",""],mask:!0};var IDAndName=Template.bind({});IDAndName.args={values:["","","",""],id:"foo",name:"bar"};var ClassName=Template.bind({});ClassName.args={values:["","","",""],containerClassName:"pin-field-container",inputClassName:"pin-field"};var Validation=Template.bind({});Validation.args={values:["a","b","d",""],type:"text",validate:"abc",showState:!0};var Formatter=Template.bind({});Formatter.args={values:["","","",""],type:"text",format:function format(_char){return _char.toUpperCase()}};var Disabled=Template.bind({});Disabled.args={values:["","","",""],disabled:!0};var BorderColor=Template.bind({});BorderColor.args={values:["","","",""],errorBorderColor:"rgb(220, 53, 69)",focusBorderColor:"#0d6efd",validBorderColor:"rgb(25, 135, 84)"};var CustomStyle=Template.bind({});CustomStyle.args={values:["","","",""],containerStyle:{backgroundColor:"orange"},inputStyle:{backgroundColor:"yellow"}};var CustomPlaceholder=Template.bind({});CustomPlaceholder.args={values:["","","",""],placeholder:"😀"};var AutoFocu=Template.bind({});AutoFocu.args={values:["","","",""],autoFocus:!0};var DisableAutoTab=Template.bind({});DisableAutoTab.args={values:["","","",""],autoTab:!1},Basic.parameters=Object.assign({storySource:{source:"(args) => {\n  const [values, setValues] = useState(args.values);\n\n  return (\n    <PinInput\n      {...args}\n      values={values}\n      onChange={(_value, _index, values) => setValues(values)}\n    />\n  );\n}"}},Basic.parameters),PinLength.parameters=Object.assign({storySource:{source:"(args) => {\n  const [values, setValues] = useState(args.values);\n\n  return (\n    <PinInput\n      {...args}\n      values={values}\n      onChange={(_value, _index, values) => setValues(values)}\n    />\n  );\n}"}},PinLength.parameters),Size.parameters=Object.assign({storySource:{source:"(args) => {\n  const [values, setValues] = useState(args.values);\n\n  return (\n    <PinInput\n      {...args}\n      values={values}\n      onChange={(_value, _index, values) => setValues(values)}\n    />\n  );\n}"}},Size.parameters),TextInput.parameters=Object.assign({storySource:{source:"(args) => {\n  const [values, setValues] = useState(args.values);\n\n  return (\n    <PinInput\n      {...args}\n      values={values}\n      onChange={(_value, _index, values) => setValues(values)}\n    />\n  );\n}"}},TextInput.parameters),Masking.parameters=Object.assign({storySource:{source:"(args) => {\n  const [values, setValues] = useState(args.values);\n\n  return (\n    <PinInput\n      {...args}\n      values={values}\n      onChange={(_value, _index, values) => setValues(values)}\n    />\n  );\n}"}},Masking.parameters),IDAndName.parameters=Object.assign({storySource:{source:"(args) => {\n  const [values, setValues] = useState(args.values);\n\n  return (\n    <PinInput\n      {...args}\n      values={values}\n      onChange={(_value, _index, values) => setValues(values)}\n    />\n  );\n}"}},IDAndName.parameters),ClassName.parameters=Object.assign({storySource:{source:"(args) => {\n  const [values, setValues] = useState(args.values);\n\n  return (\n    <PinInput\n      {...args}\n      values={values}\n      onChange={(_value, _index, values) => setValues(values)}\n    />\n  );\n}"}},ClassName.parameters),Validation.parameters=Object.assign({storySource:{source:"(args) => {\n  const [values, setValues] = useState(args.values);\n\n  return (\n    <PinInput\n      {...args}\n      values={values}\n      onChange={(_value, _index, values) => setValues(values)}\n    />\n  );\n}"}},Validation.parameters),Formatter.parameters=Object.assign({storySource:{source:"(args) => {\n  const [values, setValues] = useState(args.values);\n\n  return (\n    <PinInput\n      {...args}\n      values={values}\n      onChange={(_value, _index, values) => setValues(values)}\n    />\n  );\n}"}},Formatter.parameters),Disabled.parameters=Object.assign({storySource:{source:"(args) => {\n  const [values, setValues] = useState(args.values);\n\n  return (\n    <PinInput\n      {...args}\n      values={values}\n      onChange={(_value, _index, values) => setValues(values)}\n    />\n  );\n}"}},Disabled.parameters),BorderColor.parameters=Object.assign({storySource:{source:"(args) => {\n  const [values, setValues] = useState(args.values);\n\n  return (\n    <PinInput\n      {...args}\n      values={values}\n      onChange={(_value, _index, values) => setValues(values)}\n    />\n  );\n}"}},BorderColor.parameters),CustomStyle.parameters=Object.assign({storySource:{source:"(args) => {\n  const [values, setValues] = useState(args.values);\n\n  return (\n    <PinInput\n      {...args}\n      values={values}\n      onChange={(_value, _index, values) => setValues(values)}\n    />\n  );\n}"}},CustomStyle.parameters),CustomPlaceholder.parameters=Object.assign({storySource:{source:"(args) => {\n  const [values, setValues] = useState(args.values);\n\n  return (\n    <PinInput\n      {...args}\n      values={values}\n      onChange={(_value, _index, values) => setValues(values)}\n    />\n  );\n}"}},CustomPlaceholder.parameters),AutoFocu.parameters=Object.assign({storySource:{source:"(args) => {\n  const [values, setValues] = useState(args.values);\n\n  return (\n    <PinInput\n      {...args}\n      values={values}\n      onChange={(_value, _index, values) => setValues(values)}\n    />\n  );\n}"}},AutoFocu.parameters),DisableAutoTab.parameters=Object.assign({storySource:{source:"(args) => {\n  const [values, setValues] = useState(args.values);\n\n  return (\n    <PinInput\n      {...args}\n      values={values}\n      onChange={(_value, _index, values) => setValues(values)}\n    />\n  );\n}"}},DisableAutoTab.parameters)},"./src/stories/StatefulPinInput.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Basic",(function(){return Basic})),__webpack_require__.d(__webpack_exports__,"CustomLength",(function(){return CustomLength})),__webpack_require__.d(__webpack_exports__,"InitialValue",(function(){return InitialValue}));__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js");var react=__webpack_require__("./node_modules/react/index.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/slicedToArray.js"),slicedToArray_default=__webpack_require__.n(slicedToArray),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/objectWithoutProperties.js"),objectWithoutProperties_default=__webpack_require__.n(objectWithoutProperties),prop_types=(__webpack_require__("./node_modules/core-js/modules/es.regexp.constructor.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.exec.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/prop-types/index.js")),prop_types_default=__webpack_require__.n(prop_types),PinInput=__webpack_require__("./src/components/PinInput.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["length","initialValue","onChange"],propTypes={length:prop_types_default.a.number,initialValue:prop_types_default.a.oneOfType([prop_types_default.a.string,prop_types_default.a.arrayOf(prop_types_default.a.string)]),type:prop_types_default.a.oneOf(["number","text"]),mask:prop_types_default.a.bool,validate:prop_types_default.a.oneOfType([prop_types_default.a.string,prop_types_default.a.arrayOf(prop_types_default.a.string),prop_types_default.a.instanceOf(RegExp)]),format:prop_types_default.a.func,showState:prop_types_default.a.bool,size:prop_types_default.a.oneOf(["xs","sm","md","lg"]),autoFocus:prop_types_default.a.bool,autoTab:prop_types_default.a.bool,containerStyle:prop_types_default.a.object,inputStyle:prop_types_default.a.object,onChange:prop_types_default.a.func},StatefulPinInput_StatefulPinInput=function StatefulPinInput(_ref){var length=_ref.length,initialValue=_ref.initialValue,onChange=_ref.onChange,props=objectWithoutProperties_default()(_ref,_excluded),_useState=Object(react.useState)(Array.from({length:length},(function(_v,i){return initialValue[i]||""}))),_useState2=slicedToArray_default()(_useState,2),values=_useState2[0],setValues=_useState2[1];return Object(jsx_runtime.jsx)(PinInput.a,Object.assign({values:values,onChange:function handleInputChange(value,index,values){setValues(values),onChange&&onChange(value,index,values)}},props))};StatefulPinInput_StatefulPinInput.displayName="StatefulPinInput",StatefulPinInput_StatefulPinInput.displayName="StatefulPinInput",StatefulPinInput_StatefulPinInput.propTypes=propTypes,StatefulPinInput_StatefulPinInput.defaultProps={length:4,initialValue:"",type:"number",mask:!1,showState:!0,size:"md",autoFocus:!1,autoTab:!0,containerStyle:{},inputStyle:{},autoComplete:"off",placeholder:"o","aria-label":"Please enter pin code"};var components_StatefulPinInput=StatefulPinInput_StatefulPinInput;try{StatefulPinInput_StatefulPinInput.displayName="StatefulPinInput",StatefulPinInput_StatefulPinInput.__docgenInfo={description:"",displayName:"StatefulPinInput",props:{type:{defaultValue:{value:"number"},description:"",name:"type",required:!1,type:{name:"enum",value:[{value:'"number"'},{value:'"text"'}]}},mask:{defaultValue:{value:"false"},description:"",name:"mask",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"md"},description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"xs"'},{value:'"sm"'},{value:'"md"'},{value:'"lg"'}]}},validate:{defaultValue:null,description:"",name:"validate",required:!1,type:{name:"string | RegExp | string[]"}},format:{defaultValue:null,description:"",name:"format",required:!1,type:{name:"(char: string) => string"}},showState:{defaultValue:{value:"true"},description:"",name:"showState",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:{value:"false"},description:"",name:"autoFocus",required:!1,type:{name:"boolean"}},autoTab:{defaultValue:{value:"true"},description:"",name:"autoTab",required:!1,type:{name:"boolean"}},containerClassName:{defaultValue:null,description:"",name:"containerClassName",required:!1,type:{name:"string"}},containerStyle:{defaultValue:{value:"{}"},description:"",name:"containerStyle",required:!1,type:{name:"CSSProperties"}},inputClassName:{defaultValue:null,description:"",name:"inputClassName",required:!1,type:{name:"string"}},inputStyle:{defaultValue:{value:"{}"},description:"",name:"inputStyle",required:!1,type:{name:"CSSProperties"}},borderColor:{defaultValue:null,description:"",name:"borderColor",required:!1,type:{name:"string"}},errorBorderColor:{defaultValue:null,description:"",name:"errorBorderColor",required:!1,type:{name:"string"}},focusBorderColor:{defaultValue:null,description:"",name:"focusBorderColor",required:!1,type:{name:"string"}},validBorderColor:{defaultValue:null,description:"",name:"validBorderColor",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"(value: string | string[], index: number, values: string[]) => void"}},onComplete:{defaultValue:null,description:"",name:"onComplete",required:!1,type:{name:"(values: string[]) => void"}},length:{defaultValue:{value:"4"},description:"",name:"length",required:!1,type:{name:"number"}},initialValue:{defaultValue:{value:""},description:"",name:"initialValue",required:!1,type:{name:"string | string[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/StatefulPinInput.tsx#StatefulPinInput"]={docgenInfo:StatefulPinInput_StatefulPinInput.__docgenInfo,name:"StatefulPinInput",path:"src/components/StatefulPinInput.tsx#StatefulPinInput"})}catch(__react_docgen_typescript_loader_error){}__webpack_exports__.default={title:"Components/StatefulPinInput",component:components_StatefulPinInput,argTypes:{}};var StatefulPinInput_stories_Template=function Template(args){return Object(jsx_runtime.jsx)(components_StatefulPinInput,Object.assign({},args))};StatefulPinInput_stories_Template.displayName="Template";var Basic=StatefulPinInput_stories_Template.bind({});Basic.args={length:4,InitialValue:"",type:"number",mask:!1,size:"md",showState:!0,autoFocus:!1,autoTab:!0,placeholder:"o"};var CustomLength=StatefulPinInput_stories_Template.bind({});CustomLength.args={length:7};var InitialValue=StatefulPinInput_stories_Template.bind({});InitialValue.args={length:4,initialValue:"1234"},Basic.parameters=Object.assign({storySource:{source:"(args) => (\n  <StatefulPinInput {...args} />\n)"}},Basic.parameters),CustomLength.parameters=Object.assign({storySource:{source:"(args) => (\n  <StatefulPinInput {...args} />\n)"}},CustomLength.parameters),InitialValue.parameters=Object.assign({storySource:{source:"(args) => (\n  <StatefulPinInput {...args} />\n)"}},InitialValue.parameters)},"./storybook-init-framework-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js")},0:function(module,exports,__webpack_require__){__webpack_require__("./node_modules/@storybook/core-server/node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_require__("./node_modules/@storybook/core-server/node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_require__("./storybook-init-framework-entry.js"),__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/common/config.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/react/config.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/react/dist/esm/client/preview/config-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-links/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-essentials/node_modules/@storybook/addon-actions/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-essentials/node_modules/@storybook/addon-actions/dist/esm/preset/addArgs.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-essentials/node_modules/@storybook/addon-backgrounds/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-essentials/node_modules/@storybook/addon-backgrounds/dist/esm/preset/addParameter.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-essentials/node_modules/@storybook/addon-measure/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-outline/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./.storybook/preview.js-generated-config-entry.js"),module.exports=__webpack_require__("./generated-stories-entry.js")},1:function(module,exports){}},[[0,4,5]]]);